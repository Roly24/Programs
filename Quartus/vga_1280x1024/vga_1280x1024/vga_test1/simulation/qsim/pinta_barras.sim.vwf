/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("line_num")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("line_num[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("pxl_num")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pxl_num[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("comp_synch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hsynch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("line_num[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("line_num[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "line_num";
}

SIGNAL("pxl_num[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("pxl_num[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pxl_num";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("visible")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("vsynch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("line_num[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 310.95;
		LEVEL 1 FOR 335.8;
		LEVEL 0 FOR 335.8;
		LEVEL 1 FOR 17.45;
	}
}

TRANSITION_LIST("line_num[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 143.05;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 167.9;
			LEVEL 0 FOR 167.9;
		}
		LEVEL 1 FOR 167.9;
		LEVEL 0 FOR 17.45;
	}
}

TRANSITION_LIST("pxl_num[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.15;
		NODE
		{
			REPEAT = 419;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 0.2;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.1;
			NODE
			{
				REPEAT = 419;
				LEVEL 0 FOR 0.2;
				LEVEL 1 FOR 0.2;
			}
			LEVEL 0 FOR 0.2;
		}
		LEVEL 1 FOR 0.1;
		NODE
		{
			REPEAT = 401;
			LEVEL 0 FOR 0.2;
			LEVEL 1 FOR 0.2;
		}
		LEVEL 0 FOR 0.15;
	}
}

TRANSITION_LIST("pxl_num[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.05;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 838;
				LEVEL 1 FOR 0.1;
				LEVEL 0 FOR 0.1;
			}
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.2;
		}
		NODE
		{
			REPEAT = 838;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
		}
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 0.2;
		NODE
		{
			REPEAT = 802;
			LEVEL 1 FOR 0.1;
			LEVEL 0 FOR 0.1;
		}
		LEVEL 1 FOR 0.05;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000;
			LEVEL 0 FOR 0.05;
			LEVEL 1 FOR 0.05;
		}
	}
}

TRANSITION_LIST("comp_synch")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("hsynch")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 132.25;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.8;
			LEVEL 1 FOR 157.1;
		}
		LEVEL 0 FOR 10.8;
		LEVEL 1 FOR 17.45;
	}
}

TRANSITION_LIST("line_num[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("line_num[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 646.75;
		LEVEL 1 FOR 353.25;
	}
}

TRANSITION_LIST("pxl_num[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 102.35;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 65.5;
			LEVEL 0 FOR 102.4;
		}
		LEVEL 1 FOR 58.15;
	}
}

TRANSITION_LIST("pxl_num[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 51.15;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 51.2;
			LEVEL 0 FOR 51.2;
			LEVEL 1 FOR 14.3;
			LEVEL 0 FOR 51.2;
		}
		LEVEL 1 FOR 51.2;
		LEVEL 0 FOR 51.2;
		LEVEL 1 FOR 6.95;
	}
}

TRANSITION_LIST("pxl_num[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.55;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 25.6;
				LEVEL 0 FOR 25.6;
			}
			LEVEL 1 FOR 25.6;
			LEVEL 0 FOR 39.9;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25.6;
			LEVEL 0 FOR 25.6;
		}
		LEVEL 1 FOR 25.6;
		LEVEL 0 FOR 39.9;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25.6;
			LEVEL 0 FOR 25.6;
		}
		LEVEL 1 FOR 25.6;
		LEVEL 0 FOR 6.95;
	}
}

TRANSITION_LIST("pxl_num[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.75;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 12.8;
			LEVEL 0 FOR 12.8;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 12.8;
				LEVEL 1 FOR 12.8;
			}
			LEVEL 0 FOR 12.8;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 12.8;
			LEVEL 1 FOR 12.8;
		}
		LEVEL 0 FOR 6.95;
	}
}

TRANSITION_LIST("pxl_num[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6.35;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 12;
				LEVEL 1 FOR 6.4;
				LEVEL 0 FOR 6.4;
			}
			LEVEL 1 FOR 6.4;
			LEVEL 0 FOR 7.9;
		}
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 6.4;
			LEVEL 0 FOR 6.4;
		}
		LEVEL 1 FOR 6.4;
		LEVEL 0 FOR 7.9;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 6.4;
			LEVEL 0 FOR 6.4;
		}
		LEVEL 1 FOR 0.55;
	}
}

TRANSITION_LIST("pxl_num[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.15;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 25;
				LEVEL 1 FOR 3.2;
				LEVEL 0 FOR 3.2;
			}
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 4.7;
		}
		NODE
		{
			REPEAT = 25;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 3.2;
		}
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 4.7;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 3.2;
			LEVEL 0 FOR 3.2;
		}
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 0.55;
	}
}

TRANSITION_LIST("pxl_num[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.55;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 51;
				LEVEL 1 FOR 1.6;
				LEVEL 0 FOR 1.6;
			}
			LEVEL 1 FOR 1.6;
			LEVEL 0 FOR 3.1;
		}
		NODE
		{
			REPEAT = 51;
			LEVEL 1 FOR 1.6;
			LEVEL 0 FOR 1.6;
		}
		LEVEL 1 FOR 1.6;
		LEVEL 0 FOR 3.1;
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 1.6;
			LEVEL 0 FOR 1.6;
		}
		LEVEL 1 FOR 1.6;
		LEVEL 0 FOR 0.55;
	}
}

TRANSITION_LIST("pxl_num[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.75;
		NODE
		{
			REPEAT = 104;
			LEVEL 1 FOR 0.8;
			LEVEL 0 FOR 0.8;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.7;
			NODE
			{
				REPEAT = 104;
				LEVEL 0 FOR 0.8;
				LEVEL 1 FOR 0.8;
			}
			LEVEL 0 FOR 0.8;
		}
		LEVEL 1 FOR 0.7;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 0.8;
			LEVEL 1 FOR 0.8;
		}
		LEVEL 0 FOR 0.55;
	}
}

TRANSITION_LIST("pxl_num[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.35;
		NODE
		{
			REPEAT = 209;
			LEVEL 1 FOR 0.4;
			LEVEL 0 FOR 0.4;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.3;
			NODE
			{
				REPEAT = 209;
				LEVEL 0 FOR 0.4;
				LEVEL 1 FOR 0.4;
			}
			LEVEL 0 FOR 0.4;
		}
		LEVEL 1 FOR 0.3;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 0.4;
			LEVEL 1 FOR 0.4;
		}
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.15;
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("visible")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 127.95;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 127.9;
		}
		LEVEL 0 FOR 32.55;
	}
}

TRANSITION_LIST("vsynch")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "pxl_num[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "comp_synch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hsynch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "line_num";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "line_num[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "visible";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "vsynch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
